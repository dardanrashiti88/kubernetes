name: Simple K8s Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3

    - name: Debug - Check secret
      run: |
        echo "Step 1: Checking if KUBECONFIG_B64 secret exists..."
        if [ -z "${{ secrets.KUBECONFIG_B64 }}" ]; then
          echo "❌ KUBECONFIG_B64 secret is NOT set!"
          echo "Please add this secret to your repository settings"
          exit 1
        else
          echo "✅ KUBECONFIG_B64 secret is set"
          echo "Secret length: ${#KUBECONFIG_B64}"
        fi

    - name: Debug - Create kubeconfig
      run: |
        echo "Step 2: Creating kubeconfig file..."
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBECONFIG_B64 }}" | base64 -d > $HOME/.kube/config
        echo "✅ Kubeconfig file created"
        echo "File size: $(wc -c < $HOME/.kube/config) bytes"

    - name: Debug - Show kubeconfig
      run: |
        echo "Step 3: Showing kubeconfig contents..."
        echo "=== KUBECONFIG START ==="
        cat $HOME/.kube/config
        echo "=== KUBECONFIG END ==="

    - name: Debug - Test kubectl
      run: |
        echo "Step 4: Testing kubectl configuration..."
        kubectl config current-context
        kubectl config get-contexts
        kubectl config view --minify

    - name: Debug - Show cluster info
      run: |
        echo "Step 5: Showing cluster information..."
        echo "Current context:"
        kubectl config current-context || echo "No current context"
        echo ""
        echo "All contexts:"
        kubectl config get-contexts || echo "No contexts found"
        echo ""
        echo "Cluster servers:"
        kubectl config view -o jsonpath='{.clusters[*].cluster.server}' || echo "No cluster servers found"

    - name: Test connection
      run: |
        echo "Step 6: Testing cluster connection..."
        kubectl get nodes

    - name: Deploy to cluster
      run: kubectl apply -f k8s/

